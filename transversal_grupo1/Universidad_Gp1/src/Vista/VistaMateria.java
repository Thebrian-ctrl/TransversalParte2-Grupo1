/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Modelo.Materia;
import Percistencia.MateriaData;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author arceb
 */
public class VistaMateria extends javax.swing.JInternalFrame {

    /**
     * Creates new form VistaMateria
     */
    
    private DefaultTableModel modelo = new DefaultTableModel();
    private MateriaData mate = new MateriaData();
    public VistaMateria() {
        initComponents();
        cabecera();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextMateria = new javax.swing.JTextField();
        jTextFecha = new javax.swing.JTextField();
        jTextEstado = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonBuscar = new javax.swing.JButton();
        jButtonBaja = new javax.swing.JButton();
        jButtonGuardar = new javax.swing.JButton();
        jButtonAlta = new javax.swing.JButton();
        jButtonActualizar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jButtonListar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextID = new javax.swing.JTextField();
        jbcerrar = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(0, 102, 153));

        jLabel1.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jLabel1.setText("Materias");

        jLabel2.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel2.setText("Materia:");

        jLabel3.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel3.setText("AÃ±o:");

        jLabel4.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel4.setText("Estado:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButtonBuscar.setText("Buscar");
        jButtonBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonBuscar.setMaximumSize(new java.awt.Dimension(76, 32));
        jButtonBuscar.setMinimumSize(new java.awt.Dimension(76, 32));
        jButtonBuscar.setPreferredSize(new java.awt.Dimension(76, 32));
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        jButtonBaja.setText("DarBaja");
        jButtonBaja.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonBaja.setMaximumSize(new java.awt.Dimension(76, 32));
        jButtonBaja.setMinimumSize(new java.awt.Dimension(76, 32));
        jButtonBaja.setPreferredSize(new java.awt.Dimension(76, 32));
        jButtonBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBajaActionPerformed(evt);
            }
        });

        jButtonGuardar.setText("Guardar");
        jButtonGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });

        jButtonAlta.setText("DarAlta");
        jButtonAlta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonAlta.setMaximumSize(new java.awt.Dimension(76, 32));
        jButtonAlta.setMinimumSize(new java.awt.Dimension(76, 32));
        jButtonAlta.setPreferredSize(new java.awt.Dimension(76, 32));
        jButtonAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAltaActionPerformed(evt);
            }
        });

        jButtonActualizar.setText("Actualizar");
        jButtonActualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonActualizar.setMaximumSize(new java.awt.Dimension(76, 32));
        jButtonActualizar.setMinimumSize(new java.awt.Dimension(76, 32));
        jButtonActualizar.setPreferredSize(new java.awt.Dimension(76, 32));
        jButtonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActualizarActionPerformed(evt);
            }
        });

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jButtonListar.setText("Listar");
        jButtonListar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonListar.setMaximumSize(new java.awt.Dimension(76, 32));
        jButtonListar.setMinimumSize(new java.awt.Dimension(76, 32));
        jButtonListar.setPreferredSize(new java.awt.Dimension(76, 32));
        jButtonListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListarActionPerformed(evt);
            }
        });

        jLabel5.setText("ID:");

        jbcerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/cerrar.png"))); // NOI18N
        jbcerrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbcerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbcerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(187, 187, 187)
                                .addComponent(jLabel1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(11, 11, 11)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel3)
                                                .addComponent(jLabel4)))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addContainerGap()
                                            .addComponent(jLabel2))))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(32, 32, 32)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(jButtonEliminar)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButtonAlta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(3, 3, 3))
                                            .addComponent(jTextEstado)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextMateria)
                                            .addComponent(jTextID, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE))))))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(113, 113, 113)
                                        .addComponent(jButtonActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jButtonBaja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButtonListar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(113, 113, 113)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButtonGuardar))))
                                .addGap(0, 16, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbcerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jbcerrar)))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jButtonGuardar)
                        .addGap(4, 4, 4)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextMateria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addComponent(jTextFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonEliminar)
                    .addComponent(jButtonListar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAlta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBaja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        // TODO add your handling code here:
        try {
            
            if(jTextID.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(this, "Ingrese el ID de la materia que desea buscar.");
            }
            //obtenemos el id
            Integer id = Integer.parseInt(jTextID.getText());
            
            //objeto que nos permite usar los metodos de materiadata
            Materia m = mate.buscarMateria(id);
            
            if(m != null){
                //Establece los datos en los campos si encuentra el ID (set)
                jTextMateria.setText(m.getNombre());
                jTextFecha.setText(String.valueOf(m.getAnio()));
                jTextEstado.setText(String.valueOf(m.getEstado()));
            
            }else{
                JOptionPane.showMessageDialog(this, "No se encontro materia con ese ID");
                
                limpiarCampos();
            }
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al buscar la materia");
            
            
        }
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        // TODO add your handling code here:
        try {
            //Validacion de campos completos
            if(jTextMateria.getText().trim().isEmpty() ||
                    jTextFecha.getText().trim().isEmpty() ||
                    jTextEstado.getText().trim().isEmpty())
            {
            JOptionPane.showMessageDialog(this, "LLene los campos para agregar una materia.");
            }
            
            //validacion de texto para el nombre de la materia (solo acepta texto y espacio)                    
            if(!jTextMateria.getText().matches("[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃÃÃÃÃÃ±Ã ]+")){
                
                JOptionPane.showMessageDialog(this, "El nombre de la materia solo puede contener texto");
                jTextMateria.requestFocus();
                return;
            
            }
            
            //capturamos los datos
            String materia = jTextMateria.getText();
            Integer fecha = Integer.parseInt(jTextFecha.getText());
            Integer estado = Integer.parseInt(jTextEstado.getText());
            
            //asignacion de datos a traves del constructor sin id
            Materia m = new Materia(materia, fecha, estado);
            
            //usamos el objeto mate para llamar al metodo guardarMateria
            mate.guardarMateria(m);
            
            JOptionPane.showMessageDialog(this, "Materia guardada correctamente");
            
            limpiarCampos();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al guardar la materia " + e.getMessage());
        }
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    private void jButtonAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAltaActionPerformed
        // TODO add your handling code here:
        try {
            Integer id = Integer.parseInt(jTextID.getText().trim());
            
            Materia m = mate.buscarMateria(id);
            
            if(jTextMateria.getText().trim().isEmpty() ||
                    jTextFecha.getText().trim().isEmpty() ||
                    jTextEstado.getText().trim().isEmpty()){
                
                JOptionPane.showMessageDialog(this, "Complete los datos para dar alta");
                return;
            }
            
            if(m != null){
                int confirmacion = JOptionPane.showConfirmDialog(this, "Dar alta a la materia de " + m.getNombre() + "?",
                      "Confirmar", JOptionPane.YES_NO_OPTION)  ;
                
                if(confirmacion == JOptionPane.YES_OPTION){
                    
                    mate.darAltaMateria(m.getIdMateria());
                    limpiarCampos();
                
                
                }
                
                
            }else{
                JOptionPane.showMessageDialog(this, "No se encontro materia con ese ID");
            }
            
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "La fecha y estado deben ser de caracter numerico");
        } catch (Exception e){
            JOptionPane.showMessageDialog(this, "Error al dar de alta " + e.getMessage());
        }
    }//GEN-LAST:event_jButtonAltaActionPerformed

    private void jButtonBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBajaActionPerformed
        // TODO add your handling code here:
        
        try {
            Integer id = Integer.parseInt(jTextID.getText().trim());
            
            Materia m = mate.buscarMateria(id);
            
            if(jTextMateria.getText().trim().isEmpty() ||
                    jTextFecha.getText().trim().isEmpty() ||
                    jTextEstado.getText().trim().isEmpty()){
                
                JOptionPane.showMessageDialog(this, "Complete los datos para dar baja");
                return;
            }
            
            if(m != null){
                int confirmacion = JOptionPane.showConfirmDialog(this, "Dar baja a la materia de " + m.getNombre() + "?",
                      "Confirmar", JOptionPane.YES_NO_OPTION)  ;
                
                if(confirmacion == JOptionPane.YES_OPTION){
                    
                    mate.darBajaMateria(m.getIdMateria());
                    limpiarCampos();
                
                
                }
                
                
            }else{
                JOptionPane.showMessageDialog(this, "No se encontro materia con ese ID");
            }
            
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "La fecha y estado deben ser de caracter numerico");
            limpiarCampos();
        } catch (Exception e){
            JOptionPane.showMessageDialog(this, "Error al dar de alta " + e.getMessage());
            limpiarCampos();
        }
        
        
    }//GEN-LAST:event_jButtonBajaActionPerformed

    private void jButtonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActualizarActionPerformed
        // TODO add your handling code here:
        
        try {
            
             if(jTextMateria.getText().trim().isEmpty() ||
                    jTextFecha.getText().trim().isEmpty() ||
                    jTextEstado.getText().trim().isEmpty()){
                
                JOptionPane.showMessageDialog(this, "Complete los datos para actualizar");
                return;
            }
             
             Integer id = Integer.parseInt(jTextID.getText());
             String materia = jTextMateria.getText();
             Integer fecha = Integer.parseInt(jTextFecha.getText());
             Integer estado = Integer.parseInt(jTextEstado.getText());
             
             
             Materia m = mate.buscarMateria(id);
             
             if(m == null){
                 JOptionPane.showMessageDialog(this, "No se encontro el ID de la materia que quiere actualizar");
                 limpiarCampos();
             }
            
            m.setNombre(materia);
            m.setAnio(fecha);
            m.setEstado(estado);
            
            mate.actualizarMateria(m);
            
            JOptionPane.showMessageDialog(this, "Materia actualizada correctamente");
            
            limpiarCampos();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El id y la fecha deben de ser de caracter numericos");
            limpiarCampos();
        } catch (Exception e){
            JOptionPane.showMessageDialog(this, "Error al actualizar la materia " + e.getMessage());
            limpiarCampos();
        
        }
        
        
    }//GEN-LAST:event_jButtonActualizarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        // TODO add your handling code here:
        
        try {
            
             if(jTextMateria.getText().trim().isEmpty() ||
                    jTextFecha.getText().trim().isEmpty() ||
                    jTextEstado.getText().trim().isEmpty()){
                
                JOptionPane.showMessageDialog(this, "Complete los datos para eliminar");
                return;
            }
            
            Integer id = Integer.parseInt(jTextID.getText());
            
            Materia m = mate.buscarMateria(id);
            
            if(m != null){
                int confirmar = JOptionPane.showConfirmDialog(this, "Esta seguro que desea eliminar la materia de " + m.getNombre() + "?",
                     "Confirmar", JOptionPane.YES_NO_OPTION);   
            
                
                if(confirmar == JOptionPane.YES_OPTION){
                mate.eliminarMateria(m.getIdMateria());
                limpiarCampos();
                
                
                }
                
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al eliminar materia " + e.getMessage());
        }
        
        
        
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListarActionPerformed
        // TODO add your handling code here:
        limpiarTabla();
        
        List<Materia> listaM = mate.listarMateriaActivos();
        
        for (Materia mate : listaM) {
            modelo.addRow(new Object[]{
            mate.getIdMateria(),
            mate.getNombre(),
            mate.getAnio(),
            mate.getEstado()                    
            });
        }
        
    }//GEN-LAST:event_jButtonListarActionPerformed

    private void jbcerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbcerrarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jbcerrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonActualizar;
    private javax.swing.JButton jButtonAlta;
    private javax.swing.JButton jButtonBaja;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonListar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextEstado;
    private javax.swing.JTextField jTextFecha;
    private javax.swing.JTextField jTextID;
    private javax.swing.JTextField jTextMateria;
    private javax.swing.JButton jbcerrar;
    // End of variables declaration//GEN-END:variables

    private void cabecera(){
        modelo.addColumn("Id");
        modelo.addColumn("Materia");
        modelo.addColumn("AÃ±o");
        modelo.addColumn("Estado");
        
        jTable1.setModel(modelo);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.getTableHeader().setResizingAllowed(false);
    
    }
    
    private void limpiarCampos(){
        jTextMateria.setText("");
        jTextFecha.setText("");
        jTextEstado.setText("");
    
    }
    
    private void limpiarTabla(){
        modelo.setRowCount(0);
    }
    
}
