/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Modelo.Inscripcion;
import Modelo.Materia;
import Modelo.alumno;
import Percistencia.InscripcionData;
import Percistencia.MateriaData;
import Percistencia.alumnoData;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Usuario
 */
public class VistaInscripcion extends javax.swing.JInternalFrame {

    /**
     * Creates new form VistaInscripcion
     */
    
    private List<Materia> listaMate = new ArrayList<>();
    
    private InscripcionData insData = new InscripcionData();
    private alumnoData aluData = new alumnoData();
    private MateriaData mateData = new MateriaData();
    
    private List<alumno> listaAlu = aluData.listarAlumnosActivos();
  
    
    private DefaultTableModel modelo = new DefaultTableModel();
    
    public VistaInscripcion() {
        initComponents();
        cabecera();
        cargarAlumnos();
   
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jcbSeleccionAlumno = new javax.swing.JComboBox<>();
        jlTitulo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jrbMateInscriptas = new javax.swing.JRadioButton();
        jrbMateNoInscriptas = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTMaterias = new javax.swing.JTable();
        jbInscribir = new javax.swing.JButton();
        jbAnular = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();
        jlSeleccionAlumno = new javax.swing.JLabel();

        jTextField1.setText("Selecione un alumno:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jcbSeleccionAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbSeleccionAlumnoActionPerformed(evt);
            }
        });

        jlTitulo.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jlTitulo.setText("Inscripcion");

        jLabel2.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel2.setText("Listado de Materias");

        jrbMateInscriptas.setText("Materias Inscriptas");
        jrbMateInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbMateInscriptasActionPerformed(evt);
            }
        });

        jrbMateNoInscriptas.setText("Materias no Inscriptas");
        jrbMateNoInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbMateNoInscriptasActionPerformed(evt);
            }
        });

        jTMaterias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTMaterias);

        jbInscribir.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jbInscribir.setText("Inscribir");
        jbInscribir.setEnabled(false);
        jbInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInscribirActionPerformed(evt);
            }
        });

        jbAnular.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jbAnular.setText("Anular Inscripcion");
        jbAnular.setEnabled(false);
        jbAnular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnularActionPerformed(evt);
            }
        });

        jbSalir.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jbSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/cerrar.png"))); // NOI18N
        jbSalir.setText("Salir");
        jbSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jlSeleccionAlumno.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jlSeleccionAlumno.setText("Seleccion de alumno: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jrbMateInscriptas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jrbMateNoInscriptas)
                .addGap(58, 58, 58))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlSeleccionAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jcbSeleccionAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))))
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jbInscribir)
                .addGap(57, 57, 57)
                .addComponent(jbAnular)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbSalir)
                .addGap(62, 62, 62))
            .addGroup(layout.createSequentialGroup()
                .addGap(177, 177, 177)
                .addComponent(jlTitulo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbSeleccionAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlSeleccionAlumno))
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbMateInscriptas)
                    .addComponent(jrbMateNoInscriptas))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbInscribir)
                    .addComponent(jbAnular)
                    .addComponent(jbSalir))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jrbMateInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbMateInscriptasActionPerformed
        // TODO add your handling code here:
        limpiarTabla();
        jrbMateNoInscriptas.setSelected(false);
        cargarDatosInscriptos();
        jbAnular.setEnabled(true);
        jbInscribir.setEnabled(false);
    }//GEN-LAST:event_jrbMateInscriptasActionPerformed

    private void jrbMateNoInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbMateNoInscriptasActionPerformed
        // TODO add your handling code here:
        limpiarTabla();
        jrbMateInscriptas.setSelected(false);
        cargarDatosNoInscriptos();
        jbInscribir.setEnabled(true);
        jbAnular.setEnabled(false);
    }//GEN-LAST:event_jrbMateNoInscriptasActionPerformed

    private void jbInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInscribirActionPerformed
        // TODO add your handling code here:
        
        try{
         //guardamos la materia seleccionada de la tabla   
        int mateSeleccionada = jTMaterias.getSelectedRow();
        
        //Si se selecciono una materia, procede a hacer la inscripcion
        if(mateSeleccionada != -1){
            
            alumno a = (alumno)jcbSeleccionAlumno.getSelectedItem();
            
            int idMate = (Integer)modelo.getValueAt(mateSeleccionada, 0);
            String nombreMate = (String)modelo.getValueAt(mateSeleccionada, 1);
            int anio = (Integer)modelo.getValueAt(mateSeleccionada, 2);
            int estado = (Integer)modelo.getValueAt(mateSeleccionada, 3);
        
            Materia m = new Materia(idMate, nombreMate, anio, estado);
            
            Inscripcion i = new Inscripcion(0, a, m);
            
            insData.guardarInscripcion(i);
            
            JOptionPane.showMessageDialog(this, "Inscripcion realizada correctamente");
            
            limpiarTabla();
        }else{
            JOptionPane.showMessageDialog(this, "Seleccione una materia para hacer la inscripcion");
        
        }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error al guardar la inscripcion del alumno seleccionado" + e.getMessage());
        
        }
    }//GEN-LAST:event_jbInscribirActionPerformed

    private void jbAnularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnularActionPerformed
        // TODO add your handling code here:
        
        try{
        
        int mateSeleccionada = jTMaterias.getSelectedRow();
        
        if(mateSeleccionada != -1){
            alumno a = (alumno)jcbSeleccionAlumno.getSelectedItem();
            
            int idMate = (Integer)modelo.getValueAt(mateSeleccionada, 0);
            
            insData.anularInscripcion(a.getIdAlumno(), idMate);
            
            limpiarTabla();
        }else{
            JOptionPane.showMessageDialog(this, "Seleccione una materia para anular su inscripcion");
        
        }
        
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Error al anular la inscripcion de la materia seleccionada" + ex.getMessage());
        
        }
    }//GEN-LAST:event_jbAnularActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jcbSeleccionAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbSeleccionAlumnoActionPerformed
        // TODO add your handling code here:
        
        
        limpiarTabla();
    }//GEN-LAST:event_jcbSeleccionAlumnoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTMaterias;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton jbAnular;
    private javax.swing.JButton jbInscribir;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<alumno> jcbSeleccionAlumno;
    private javax.swing.JLabel jlSeleccionAlumno;
    private javax.swing.JLabel jlTitulo;
    private javax.swing.JRadioButton jrbMateInscriptas;
    private javax.swing.JRadioButton jrbMateNoInscriptas;
    // End of variables declaration//GEN-END:variables
    
    private void cabecera(){
        modelo.addColumn("Id");
        modelo.addColumn("Materia");
        modelo.addColumn("Año");
        modelo.addColumn("Estado");
        
        jTMaterias.setModel(modelo);
        jTMaterias.getTableHeader().setReorderingAllowed(false);
        jTMaterias.getTableHeader().setResizingAllowed(false);
    }

   private void limpiarTabla(){
        modelo.setRowCount(0);
    }
   
   private void cargarAlumnos() {
       for (alumno a : listaAlu) {
           jcbSeleccionAlumno.addItem(a);
       }
   
   }
   //Trae a vista las materias no inscriptas del alumno seleccionado en ComboBox
   private void cargarDatosNoInscriptos(){
       try{
       //creamos un objeto tipo alumno que guarda al alumno seleccionado del combobox
       alumno seleccionado = (alumno)jcbSeleccionAlumno.getSelectedItem();
       
       //listamos las materias a las cuales no esta inscripto el alumno seleccionado
       listaMate = insData.listaMateriasNoInscriptas(seleccionado.getIdAlumno());
       
       //recorremos esas materias y las mostramos en Jtable
       for (Materia m : listaMate) {
           modelo.addRow(new Object[]{m.getIdMateria(), m.getNombre(), m.getAnio(), m.getEstado()});
       }
       }catch(Exception e){
           JOptionPane.showMessageDialog(this, "Error al cargar los datos de las materias no inscriptas" + e.getMessage());
       }
   }
   
   private void cargarDatosInscriptos(){
       try{
       alumno seleccionado = (alumno)jcbSeleccionAlumno.getSelectedItem();
       
       List<Materia> listaM = insData.listaMateriasInscriptas(seleccionado.getIdAlumno());
       
       for (Materia m : listaM) {
           modelo.addRow(new Object[]{m.getIdMateria(), m.getNombre(), m.getAnio(), m.getEstado()});
       }
       }catch(Exception e){
           JOptionPane.showMessageDialog(this, "Error al cargar los datos de las materias inscriptas" + e.getMessage());
       }
   }
   
   
   
   
}
